# Copyright 2014-2015 by Cloudsoft Corporation Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

brooklyn.catalog:
  version: "1.1.0-SNAPSHOT" # CLOCKER_VERSION

  brooklyn.libraries:

  - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.clocker&a=brooklyn-clocker-patches&v=1.1.0-SNAPSHOT" # CLOCKER_VERSION
  - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.clocker&a=brooklyn-clocker-docker&v=1.1.0-SNAPSHOT" # CLOCKER_VERSION
  - "https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=io.brooklyn.clocker&a=brooklyn-clocker-dist&v=1.1.0-SNAPSHOT" # CLOCKER_VERSION
  - "https://s3-eu-west-1.amazonaws.com/brooklyn-clocker/patch-softlayer-clocker-137.jar"
  - "https://oss.sonatype.org/content/repositories/releases/io/brooklyn/networking/brooklyn-networking-portforwarding/0.8.0-incubating/brooklyn-networking-portforwarding-0.8.0-incubating.jar" # ADVANCED_NETWORKING_VERSION
  - "https://oss.sonatype.org/content/repositories/releases/io/brooklyn/networking/brooklyn-networking-common/0.8.0-incubating/brooklyn-networking-common-0.8.0-incubating.jar" # ADVANCED_NETWORKING_VERSION
  - "https://oss.sonatype.org/content/repositories/releases/io/brooklyn/networking/brooklyn-networking-cloudstack/0.8.0-incubating/brooklyn-networking-cloudstack-0.8.0-incubating.jar" # ADVANCED_NETWORKING_VERSION
  - "https://repository.apache.org/service/local/repositories/releases/content/org/apache/jclouds/labs/docker/1.9.1/docker-1.9.1.jar"
  - "https://repository.apache.org/service/local/repositories/releases/content/org/apache/jclouds/api/cloudstack/1.9.1/cloudstack-1.9.1.jar"

  items:

  - id: docker-infrastructure
    name: Docker Infrastructure
    iconUrl: classpath://docker-logo.png
    item:
      type: brooklyn.entity.container.docker.DockerInfrastructure
      brooklyn.config:
        docker.version: 1.7.1
        entity.dynamicLocation.name: "my-docker-cloud"
        docker.container.cluster.headroom.count: 4
        docker.policy.ha.enable: false
        docker.container.strategies:
        - $brooklyn:object:
            type: brooklyn.location.docker.strategy.MaxContainersPlacementStrategy
            brooklyn.config:
              maxContainers: 16
        - $brooklyn:object:
            type: brooklyn.location.docker.strategy.BreadthFirstPlacementStrategy
        docker.host.spec:
          $brooklyn:entitySpec:
            type: docker-host

  - id: docker-host
    name: Docker Host
    iconUrl: classpath://docker-logo.png
    item:
      type: brooklyn.entity.container.docker.DockerHost
      brooklyn.config:
        docker.host.driver.storage: overlay
        docker.host.nameFormat: "docker-%2$d"
        docker.container.spec:
          $brooklyn:entitySpec:
            type: docker-container
        docker.host.flags:
          minRam: 7g
          minCores: 2
          stopIptables: true
        start.timeout: 5m

  - id: docker-container
    name: Docker Container
    iconUrl: classpath://docker-logo.png
    item:
      type: brooklyn.entity.container.docker.DockerContainer
      brooklyn.config:
        docker.container.nameFormat: "container-%2$02x"

  - id: calico-network
    name: Calico Network
    iconUrl: classpath://calico-logo.png
    item:
      type: brooklyn.networking.sdn.calico.CalicoNetwork
      brooklyn.config:
        calico.version: 0.4.9
        sdn.agent.spec:
          $brooklyn:entitySpec:
            type: calico-node

  - id: calico-node
    name: Calico Node
    iconUrl: classpath://calico-logo.png
    item:
      type: brooklyn.networking.sdn.calico.CalicoNode

  - id: etcd-cluster
    name: Etcd Cluster
    item:
      type: brooklyn.entity.nosql.etcd.EtcdCluster
      brooklyn.config:
        etcd.version: 2.0.11
        etcd.node.spec:
          $brooklyn:entitySpec:
            type: etcd-node

  - id: etcd-node
    name: Etcd Node
    item:
      type: brooklyn.entity.nosql.etcd.EtcdNode

  - id: etcd-proxy
    name: Etcd Proxy
    item:
      type: brooklyn.entity.nosql.etcd.EtcdProxy

  - id: weave-network
    iconUrl: classpath://weaveworks-logo.png
    item:
      type: brooklyn.networking.sdn.weave.WeaveNetwork
      brooklyn.config:
        weave.version: 1.1.0
        sdn.agent.spec:
          $brooklyn:entitySpec:
            type: weave-router

  - id: weave-router
    iconUrl: classpath://weaveworks-logo.png
    item:
      type: brooklyn.networking.sdn.weave.WeaveContainer

  - id: mesos-cluster
    name: Mesos Cluster
    item:
      type: brooklyn.entity.mesos.MesosCluster
      brooklyn.config:
        entity.dynamicLocation.name: "my-mesos-cluster"

  - id: marathon-framework
    name: Marathon Framework
    item:
      type: brooklyn.entity.mesos.framework.marathon.MarathonFramework

  - id: docker-cloud
    name: Clocker
    description: Docker Cloud infrastructure
    iconUrl: classpath://docker-logo.png
    itemType: template
    item:
      services:
      - type: docker-infrastructure
        brooklyn.config:
          docker.host.cluster.initial.size: 1
          docker.container.cluster.headroom.count: 0
          docker.container.strategies:
          - $brooklyn:object:
              type: brooklyn.location.docker.strategy.MaxContainersPlacementStrategy
              brooklyn.config:
                maxContainers: 32
          - $brooklyn:object:
              type: brooklyn.location.docker.strategy.DepthFirstPlacementStrategy
          sdn.enable: false
          docker.host.spec:
            $brooklyn:entitySpec:
              type: docker-host
              brooklyn.config:
                docker.container.spec:
                  $brooklyn:entitySpec:
                    type: docker-container
                    brooklyn.config:
                      docker.container.nameFormat: "docker-%2$02x"

  - id: docker-cloud-calico
    name: Clocker with Calico
    description: Docker Cloud infrastructure with Calico networking
    iconUrl: classpath://calico-logo.png
    itemType: template
    item:
      services:
      - type: docker-infrastructure
        brooklyn.config:
          sdn.enable: true
          sdn.provider.spec:
            $brooklyn:entitySpec:
              type: calico-network
              brooklyn.config:
                sdn.network.cidr: 50.0.0.0/16
                sdn.network.size: 24
          docker.host.spec:
            $brooklyn:entitySpec:
              type: docker-host
              brooklyn.config:
                docker.container.spec:
                  $brooklyn:entitySpec:
                    type: docker-container
                    brooklyn.config:
                      docker.container.nameFormat: "calico-%2$02x"

  - id: docker-cloud-weave
    name: Clocker with Weave
    description: Docker Cloud infrastructure with Weave networking
    iconUrl: classpath://weaveworks-logo.png
    itemType: template
    item:
      services:
      - type: docker-infrastructure
        brooklyn.config:
          sdn.enable: true
          sdn.provider.spec:
            $brooklyn:entitySpec:
              type: weave-network
          docker.host.spec:
            $brooklyn:entitySpec:
              type: docker-host
              brooklyn.config:
                docker.container.spec:
                  $brooklyn:entitySpec:
                    type: docker-container
                    brooklyn.config:
                      docker.container.nameFormat: "weave-%2$02x"

  - id: external-mesos-cluster
    name: External Mesos Cluster
    description: Access a running Mesos cluster
    iconUrl: classpath://mesos-logo.png
    itemType: template
    item:
      services:
      - type: mesos-cluster
        brooklyn.config:
          mesos.url: "http://localhost:5050/"

# vim:ts=2:sw=2:ft=yaml:
