brooklyn.catalog:
  items:
  - https://raw.githubusercontent.com/brooklyncentral/common-catalog-utils/master/common-tests/src/main/resources/commontests/common.tests.bom
  - id: kubernetes-cluster-tests
    version: "2.1.0-SNAPSHOT" # CLOCKER_VERSION
    itemType: template
    iconUrl: https://twitter.com/kubernetesio/profile_image?size=original
    name: Kubernetes Cluster Tests
    item:
      services:
      - type: kubernetes-cluster-template
        id: k8s-cluster
      - type: org.apache.brooklyn.test.framework.TestCase
        name: K8S Smoke Tests
        brooklyn.config:
          timeout: 1h
          targetId: k8s-cluster
        brooklyn.children:
        - type: assert-up-and-running-initial
          name: "01. K8S cluster up and running"
        - type: assert-reachable
          name: "02. K8S UI Reachable"
          brooklyn.config:
            endpointSensor: main.uri
            timeout: 5m
        - type: invoke-effector
          name: "03. kubectl create deployment [A]"
          target: $brooklyn:entity("kubernetes-master")
          effector: kubectl
          params:
            args: 'run workload-a --image=cloudsoft/centos:7 --replicas=1 --port=22'
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "04. kubectl create deployment [B]"
          target: $brooklyn:entity("kubernetes-master")
          assertStatus:
            equals: 0
          command: |
            kubectl run workload-b --image=cloudsoft/centos:7 --replicas=1 --port=22
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "05. Assert [A] running"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            kubectl get pods | grep -i running
          assertOut:
            contains: 'workload-a'
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "06. Assert [B] running"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            kubectl get pods | grep -i running
          assertOut:
            contains: 'workload-b'

        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "07. Test ICMP [A -> B]"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            POD_A="$(kubectl get pods -o wide | grep workload-a | tr -s ' ' | cut -d ' ' -f1)"
            IP_B="$(kubectl get pods -o wide | grep workload-b | tr -s ' ' | cut -d ' ' -f6)"
            kubectl exec ${POD_A} -- ping -c 1 ${IP_B}
          assertOut:
            contains: '1 received'
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "08. Test ICMP [B -> A]"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            POD_B="$(kubectl get pods -o wide | grep workload-b | tr -s ' ' | cut -d ' ' -f1)"
            IP_A="$(kubectl get pods -o wide | grep workload-a | tr -s ' ' | cut -d ' ' -f6)"
            kubectl exec ${POD_B} -- ping -c 1 ${IP_A}
          assertOut:
            contains: '1 received'
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "09. Install Netcat"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            POD_A="$(kubectl get pods -o wide | grep workload-a | tr -s ' ' | cut -d ' ' -f1)"
            POD_B="$(kubectl get pods -o wide | grep workload-b | tr -s ' ' | cut -d ' ' -f1)"
            kubectl exec ${POD_A} -- yum install -y nc
            kubectl exec ${POD_B} -- yum install -y nc
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "10. Check TCP"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            POD_A="$(kubectl get pods -o wide | grep workload-a | tr -s ' ' | cut -d ' ' -f1)"
            POD_B="$(kubectl get pods -o wide | grep workload-b | tr -s ' ' | cut -d ' ' -f1)"
            IP_A="$(kubectl get pods -o wide | grep workload-a | tr -s ' ' | cut -d ' ' -f6)"
            kubectl exec ${POD_A} -- bash -c "nohup nc -l -k 5000 >> /tmp/nohup.out 2>&1" &
            kubectl exec ${POD_A} -- bash -c "echo connect_from_A | nc -C localhost 5000"
            kubectl exec ${POD_B} -- bash -c "echo connect_from_B | nc -C ${IP_A} 5000"
            kubectl exec ${POD_A} -- cat /tmp/nohup.out | tr -d "\n\r"
          assertOut:
            contains: 'connect_from_Aconnect_from_B'
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "11. Check UDP"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            POD_A="$(kubectl get pods -o wide | grep workload-a | tr -s ' ' | cut -d ' ' -f1)"
            POD_B="$(kubectl get pods -o wide | grep workload-b | tr -s ' ' | cut -d ' ' -f1)"
            IP_A="$(kubectl get pods -o wide | grep workload-a | tr -s ' ' | cut -d ' ' -f6)"
            kubectl exec ${POD_A} -- bash -c "nohup nc -u -l 5000 >> /tmp/nohup2.out 2>&1" &
            kubectl exec ${POD_A} -- bash -c "echo connect_from_A | nc -u -C localhost 5000"
            kubectl exec ${POD_A} -- bash -c "nohup nc -u -l 5001 >> /tmp/nohup2.out 2>&1" &
            kubectl exec ${POD_B} -- bash -c "echo connect_from_B | nc -u -C ${IP_A} 5001"
            kubectl exec ${POD_A} -- cat /tmp/nohup2.out | tr -d "\n\r"
          assertOut:
            contains: 'connect_from_Aconnect_from_B'
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "12. Kill deployments [A,B]"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            kubectl delete deployment workload-a
            kubectl delete deployment workload-b
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "13. Assert [A,B] NOT running"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            kubectl get deployments | grep workload- | wc -l
          assertOut:
            contains: '0'        
        - type: org.apache.brooklyn.test.framework.TestSensor
          name: "15. Size of kubernetes master cluster is 3"
          targetId: kubernetes-master-cluster
          sensor: group.members.count
          assert:
            equals: 3
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "16. Kill a master node"
          target: $brooklyn:entity("kubernetes-master")
          command: |
            nohup sudo bash -c 'sleep 10 && shutdown -h -t0 now' &
        - type: org.apache.brooklyn.test.framework.TestSensor
          name: "17. Size of kubernetes master cluster increased to 4"
          targetId: kubernetes-master-cluster
          sensor: group.members.count
          assert:
            equals: 4
        - type: org.apache.brooklyn.test.framework.TestSensor
          name: "18. Size of kubernetes master cluster decreased to 3"
          targetId: kubernetes-master-cluster
          sensor: group.members.count
          assert:
            equals: 3
        - type: org.apache.brooklyn.test.framework.TestSensor
          name: "19. Size of kubernetes worker cluster is 3"
          targetId: kubernetes-worker-cluster
          sensor: group.members.count
          assert:
            equals: 3
        - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
          name: "20. Kill a worker node"
          target: $brooklyn:entity("kubernetes-worker")
          command: |
            nohup sudo bash -c 'sleep 10 && shutdown -h -t0 now' &
        - type: org.apache.brooklyn.test.framework.TestSensor
          name: "21. Size of kubernetes worker cluster increased to 4"
          targetId: kubernetes-worker-cluster
          sensor: group.members.count
          assert:
            equals: 4
        - type: org.apache.brooklyn.test.framework.TestSensor
          name: "22. Size of kubernetes worker cluster decreased to 3"
          targetId: kubernetes-worker-cluster
          sensor: group.members.count
          assert:
            equals: 3
