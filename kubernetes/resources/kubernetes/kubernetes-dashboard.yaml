kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: kubernetes-dashboard
  namespace: kube-system
  labels:
    app: kubernetes-dashboard
    name: kubernetes-dashboard-deployment
    version: v1.4.1
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "kubernetes-dashboard"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-dashboard
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
        version: v1.4.1
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - name: kubernetes-dashboard
        image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.4.1
        imagePullPolicy: Always
        ports:
          - containerPort: 9090
            protocol: TCP
        volumeMounts:
          - mountPath: "/etc/kubernetes/kubeconfig"
            name: kubeconfig
            readOnly: true
        env:
          - name: KUBECONFIG
            value: "/etc/kubernetes/kubeconfig"
        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
        - name: kubeconfig
          hostPath:
            path: "/etc/kubernetes/kubeconfig"
---
kind: Service
apiVersion: v1
metadata:
  name: kubernetes-dashboard
  namespace: kube-system
  labels:
    app: kubernetes-dashboard
    name: kubernetes-dashboard-service
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 9090
  selector:
    app: kubernetes-dashboard
