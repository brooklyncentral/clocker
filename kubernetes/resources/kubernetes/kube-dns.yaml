kind: Service
apiVersion: v1
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    app: kube-dns
    name: kube-dns-service
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "kube-dns"
spec:
  selector:
    app: kube-dns
  clusterIP: ${config['template.substitutions']['dns_service_ip']}
  ports:
    - name: dns
      port: 53
      protocol: UDP
    - name: dns-tcp
      port: 53
      protocol: TCP
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    app: kube-dns
    name: kube-dns-replicationcontroller
    version: v20
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "kube-dns"
spec:
  replicas: ${config['template.substitutions']['replicas']}
  selector:
    app: kube-dns
    version: v20
  template:
    metadata:
      labels:
        app: kube-dns
        version: v20
        kubernetes.io/cluster-service: "true"
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    spec:
      containers:
      - name: kubedns
        image: gcr.io/google_containers/kubedns-amd64:1.8
        resources:
          limits:
            cpu: 100m
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        volumeMounts:
          - mountPath: "/etc/kubernetes/kubeconfig"
            name: kubeconfig
            readOnly: true
        args:
          - --domain=${config['template.substitutions']['dns_service_domain']}.local.
          - --dns-port=10053
          - --kubecfg-file=/etc/kubernetes/kubeconfig
        ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
      - name: dnsmasq
        image: gcr.io/google_containers/kube-dnsmasq-amd64:1.3
        args:
          - --cache-size=1000
          - --no-resolv
          - --server=127.0.0.1#10053
        ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
      - name: healthz
        image: gcr.io/google_containers/exechealthz-amd64:1.1
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        args:
          - >-
            -cmd=nslookup kubernetes.default.svc.${config['template.substitutions']['dns_service_domain']}.local 127.0.0.1 > /dev/null &&
              nslookup kubernetes.default.svc.${config['template.substitutions']['dns_service_domain']}.local 127.0.0.1:10053 > /dev/null
          - -port=8080
          - -quiet
        ports:
          - containerPort: 8080
            protocol: TCP
    volumes:
      - name: kubeconfig
        hostPath:
          path: "/etc/kubernetes/kubeconfig"
    dnsPolicy: Default
