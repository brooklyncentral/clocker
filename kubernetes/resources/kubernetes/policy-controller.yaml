apiVersion: extensions/v1beta1
kind: ReplicaSet
metadata:
  name: policy-controller
  namespace: kube-system
  labels:
    app: policy-controller
    name: policy-controller-pod
    version: "v0.3.0"
    kubernetes.io/cluster-service: "true"
    projectcalico.org/app: "policy-controller"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: policy-controller
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      name: policy-controller
      namespace: kube-system
      labels:
        app: policy-controller
        kubernetes.io/cluster-service: "true"
    spec:
      hostNetwork: true
      containers:
        - name: policy-controller
          image: calico/kube-policy-controller:v0.3.0
          env:
            - name: ETCD_ENDPOINTS
              value: "${config['etcd.endpoints']}"
            - name: K8S_API
              value: "${config['kubernetes.url']}"
            - name: LEADER_ELECTION
              value: "true"
            - name: CONFIGURE_ETC_HOSTS
              value: "true"
        - name: leader-elector
          image: quay.io/calico/leader-elector:v0.1.0
          imagePullPolicy: IfNotPresent
          args:
            - "--election=calico-policy-election"
            - "--election-namespace=kube-system"
            - "--http=127.0.0.1:4040"
          volumeMounts:
            - mountPath: "/kubeconfig"
              name: kubeconfig
      volumes:
        - name: kubeconfig
          hostPath:
            path: "/etc/kubernetes/kubeconfig"
